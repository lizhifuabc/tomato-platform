<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.tomato</groupId>
        <artifactId>tomato-cloud</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>tomato-cloud-feign-starter</artifactId>

    <dependencies>
        <!--  在编译时会自动收集配置类的条件 spring-autoconfigure-metadata.properties      -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- 生成 spring-configuration-metadata.json，代码提示-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>  <!-- 表示依赖不会传递 -->
        </dependency>
        <!--  编译依赖项      -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <!-- OpenFeign 客户端依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <!-- SpringCloud Loadbalancer -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>
        <!-- OpenFeign 默认使用 Java 自带的 URLConnection 对象创建 HTTP 请求 -->
        <!-- 底层通信组件更换为 Apache HttpClient、OKHttp 这样的专用通信组件，
        基于这些组件自带的连接池，可以更好地对 HTTP 连接对象进行重用与管理。 -->
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
        </dependency>
        <!-- 或者添加 httpclient 框架依赖 -->
<!--        <dependency>-->
<!--            <groupId>io.github.openfeign</groupId>-->
<!--            <artifactId>feign-httpclient</artifactId>-->
<!--        </dependency>-->

        <!--caffeine 替换LB 默认缓存实现-->
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <!--重试-->
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>
        <!-- Resilience4j: 提供了一些常见的模式，例如断路器，重试，速率限制，延迟和回退。-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tomato</groupId>
            <artifactId>tomato-common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tomato</groupId>
            <artifactId>tomato-jackson-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.tomato</groupId>
            <artifactId>tomato-tracing-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-micrometer</artifactId>
        </dependency>
    </dependencies>

</project>