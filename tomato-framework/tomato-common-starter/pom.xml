<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.tomato</groupId>
		<artifactId>tomato-framework</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>tomato-common-starter</artifactId>

	<dependencies>

		<!--	Spring Boot的核心库，提供自动配置的功能	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<!--	包含了Spring Boot的核心功能和自动配置的起始点，可以帮助简化Spring Boot应用程序的开发过程	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!--	可选的依赖项。它提供了用于处理Spring Boot配置的注解处理器	-->
		<!--	@ConfigurationProperties 创建的配置类生成元数据信息（spring-configuration-metadata.json），这样就能在你自己的配置文件中显示出	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>

		<!--	可选的依赖项。它提供了用于自动配置处理的注解处理器。	-->
		<!--	@ConfigurationProperties 生成配置元数据，并将其提供给 IDE 和其他工具，以便在开发过程中提供更好的配置文件支持	-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure-processor</artifactId>
		</dependency>
	</dependencies>

</project>